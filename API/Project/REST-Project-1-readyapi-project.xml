<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="55059554-8ec9-4cdd-b8a0-1deb94c45a8f" created="3.57.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="REST Project 1" projectVersion="" updated="3.57.0 2024-12-10T10:59:20Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="99ddb7c4-1b7b-4d46-b9da-1e5282d45656" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://api.github.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings id="b3f60e1e-3f0e-4706-8628-8dfb5ae6857b"/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://api.github.com</con:endpoint></con:endpoints><con:resource name="Emails" path="/user/emails" id="2b3e3c0e-5f19-41e7-8bb9-d15edcfd4aa7"><con:settings/><con:parameters/><con:method name="Emails" id="df0afe31-fac4-4562-9be5-72c3db15406c" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="5652cea5-f1c1-46f6-952b-ebc2405d26ef" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="Keys" path="/user/keys" id="276c5afe-18e8-435f-b700-bd1ba6d1e024"><con:settings/><con:parameters/><con:method name="Keys" id="5d3e4802-e9d1-4034-bbed-b3619ce17b46" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:keys="https://api.github.com/user/keys">keys:Response</con:element></con:representation><con:request name="Request 1" id="e1f33f46-100b-479e-ac74-73b2bb9169e7" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="KeyId" path="/user/keys/{keyId}" id="56c296cf-499d-4ea4-80d4-8edc60476b47"><con:settings/><con:parameters><con:parameter><con:name>keyId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="KeyId" id="82d4afff-fd69-4532-99fc-2b32a2eb9793" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c7fa4473-463b-469f-aa59-aa6025a7d606" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="c6113b5e-cbf9-4919-90a2-c78ad8690cf4" name="https://api.github.com Test Suite"><con:settings id="4a930812-945a-4c45-b695-229bbcdd68bc"/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2fbd9a1d-dd94-40b4-a3a2-f8a8a11808ab" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test Case" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="Request 1" id="1c69e4d1-dace-457b-b5c6-050e16672fb8"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/emails" methodName="Emails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="5652cea5-f1c1-46f6-952b-ebc2405d26ef" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/emails</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b2192621-93be-481d-8523-23c3d56b5b84" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>AuthP</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Request 2" id="f234c820-c74c-48a0-96ae-361343b42d31"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys" methodName="Keys" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 2" id="e1f33f46-100b-479e-ac74-73b2bb9169e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="RecordRequestRepresentations">false</con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request>{
	"title": "TestKey",
	"key":"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKe7CML/fJNUmvd0zrOE/EQvKSVjSq8SJfmpDNzBtLVG"
}
</con:request><con:originalUri>https://api.github.com/user/keys</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c40b790a-a281-4578-a954-f3e406490622" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>AuthP</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="996b6e07-7f88-459b-9aed-120f9785ceed"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>key</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Request 2</con:sourceStep><con:sourcePath>$['id']</con:sourcePath><con:targetType>keyId</con:targetType><con:targetStep>Request 3</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Request 3" id="3dc24edc-ca4c-4eeb-bd29-f5b3222ec203"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys/{keyId}" methodName="KeyId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 3" id="c7fa4473-463b-469f-aa59-aa6025a7d606" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/keys/115540417</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e989d43b-d20b-4769-ae9a-4b155ef4b13e" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>AuthP</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="keyId" value="115540417"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>AuthP</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository><con:oAuth20AuthEntry><con:name>AuthP</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry></con:authRepository><con:tags/></con:soapui-project>